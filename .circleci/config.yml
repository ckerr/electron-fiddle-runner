version: 2.1

orbs:
  cfa: continuousauth/npm@1.0.2
  node: circleci/node@5.1.0
  win: circleci/windows@5.0.0

executors:
  linux:
    docker:
      - image: cimg/base:stable
  macos:
    macos:
      xcode: "14.3.0"
    resource_class: macos.x86.medium.gen2
  windows:
    machine:
      image: windows-server-2022-gui:stable
      resource_class: windows.medium
      shell: bash.exe

commands:
  install:
    parameters:
      node-version:
        description: Node.js version to install
        type: string
    steps:
      - run: git config --global core.autocrlf input
      - node/install:
          node-version: << parameters.node-version >>
      - run: nvm use << parameters.node-version >>
      # Can't get yarn installed on Windows with the circleci/node orb, so use npx yarn for commands
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}
            - v1-dependencies-{{ arch }}
      - run: npx yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ arch }}-{{ checksum "yarn.lock" }}

jobs:
  test:
    parameters:
      platform:
        description: Platform to use
        enum:
          - linux
          - macos
          - windows
        type: enum
      node-version:
        description: Node.js version to install
        type: string
    executor: << parameters.platform >>
    steps:
      - install:
          node-version: << parameters.node-version >>
      - run: npx yarn test:ci

workflows:
  test_and_release:
    # Run the test jobs first, then the release only when all the test jobs are successful
    jobs:
      - test:
          name: test-<< matrix.platform >>-<< matrix.node-version >>
          matrix:
            parameters:
              platform:
                - linux
                - macos
                - windows
              node-version:
                - 20.2.0
                - 18.14.0
                - 16.19.0
                - 14.19.0
      - cfa/release:
          requires:
            - test
          filters:
            branches:
              only:
                - main
          context: cfa-release
